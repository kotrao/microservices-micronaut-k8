plugins {
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("io.micronaut.application") version "2.0.3"
    id("com.google.cloud.tools.jib") version "3.1.4"
}


repositories {
    mavenCentral()
    maven { url "https://oss.jfrog.org/oss-snapshot-local" }

}

micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("io.apptor.*")
    }
}
/*
dependencies {
    implementation "io.projectreactor:reactor-core"
    implementation("io.micronaut.rxjava2:micronaut-rxjava2")
    implementation("io.micronaut.rxjava2:micronaut-rxjava2-http-client")

    implementation "io.micronaut:micronaut-runtime"
    implementation "jakarta.persistence:jakarta.persistence-api:2.2.2"
    implementation "io.micronaut.data:micronaut-data-jdbc"
    runtimeOnly "io.micronaut.sql:micronaut-jdbc-hikari"
    runtimeOnly("org.postgresql:postgresql:42.2.18")

    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"


    testImplementation(platform("org.testcontainers:testcontainers-bom:1.15.1"))
    testRuntimeOnly("org.testcontainers:postgresql")
    testImplementation ("org.testcontainers:junit-jupiter:1.15.1")

    implementation 'io.apptor.email.sdk:email-sdk:0.19'
    implementation 'io.apptor:apptor-common:SNAPSHOT-0.8'

    implementation group: 'org.springframework', name: 'spring-jdbc', version: '5.2.9.RELEASE'

    implementation("io.micronaut.kubernetes:micronaut-kubernetes-discovery-client")
    implementation("io.micronaut.kubernetes:micronaut-kubernetes-client")
    implementation("io.micronaut.kubernetes:micronaut-kubernetes-client-rxjava2")


    implementation 'com.auth0:jwks-rsa:0.4.0'
    implementation 'com.auth0:java-jwt:3.3.0'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-cognitoidp', version: '1.11.818'

    testImplementation("io.micronaut.liquibase:micronaut-liquibase")

    implementation("io.apptor.productmgmt.sdk:product-sdk:0.216"){
        exclude group: 'io.apptor', module: 'apptor-security'
    }


}

 */


dependencies {
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-runtime")
    implementation("javax.annotation:javax.annotation-api")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-management")
    //implementation project(':kubernetes-discovery-client')
    implementation("io.micronaut.kubernetes:micronaut-kubernetes-discovery-client")
    implementation("io.micronaut.kubernetes:micronaut-kubernetes-client")
    implementation("io.micronaut.kubernetes:micronaut-kubernetes-client-rxjava2")


    runtimeOnly("ch.qos.logback:logback-classic")

}



application {
    mainClass.set("io.apptor.Application")
}

tasks {
    dockerBuild {
        images = ['micronauttest/customersvc']
    }
}
jib {
    from {
        image = "openjdk:15-alpine"
    }
    to {
        image = "micronauttest/customersvc"
    }
}

