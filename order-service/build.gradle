plugins {
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("io.micronaut.application") version "2.0.3"
    id("com.google.cloud.tools.jib") version "3.1.4"
}


repositories {
    mavenCentral()
    jcenter()
    maven { url "https://oss.jfrog.org/oss-snapshot-local" }
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("io.apptor.*")
    }
}

dependencies {
    implementation "io.projectreactor:reactor-core"
    implementation("io.micronaut.rxjava2:micronaut-rxjava2")
    implementation("io.micronaut.rxjava2:micronaut-rxjava2-http-client")

    implementation "io.micronaut:micronaut-runtime"

    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"



    implementation("io.micronaut.kubernetes:micronaut-kubernetes-discovery-client")
    implementation("io.micronaut.kubernetes:micronaut-kubernetes-client")
    implementation("io.micronaut.kubernetes:micronaut-kubernetes-client-rxjava2")



}
/*
dependencies {
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-runtime")
    implementation("javax.annotation:javax.annotation-api")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-management")
    //implementation project(':kubernetes-discovery-client')
    implementation("io.micronaut.kubernetes:micronaut-kubernetes-discovery-client")

    runtimeOnly("ch.qos.logback:logback-classic")
    //testCompile project(":test-utils")
}

 */

application {
    mainClass.set("io.apptor.Application")
}

tasks {
    dockerBuild {
        images = ['micronauttest/ordersvc']
    }
}
jib {
    from {
        image = "openjdk:15-alpine"
    }
    to {
        image = "micronauttest/ordersvc"
    }
}
